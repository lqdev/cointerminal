
v0.5.12
-------

Documentation fixed, unit tests fixed for node v6


v0.5.11
-------

.format() now supports %Y, like %I but without non-enum, func, and descriptor


v0.5.10
-------

Stack trace inspector fixed for anonymous function in V8


v0.5.9
------

New: string.markup(), a stand-alone version of the markup existing in string.format()


v0.5.8
------

Dependencies


v0.5.6 - v0.5.7
---------------

inspectError(): firefox stack trace improvements


v0.5.5
------

inspectError(): 'browser' option


v0.5.4
------

Html error inspector improvements


v0.5.3
------

Dependency organization


v0.5.2
------

.inspect(): 'sort' option that sort keys


v0.5.1
------

Abort the home-made diff algorithm project in .inspect().


v0.5.0
------

Breaking changes: more options to .inspect().


v0.4.4
------

New function: latinize().


v0.4.3
------

"use strict" everywhere.


v0.4.2
------

"use strict" everywhere.


v0.4.1
------

.format(): .format.count() and .format.hasFormatting() have had bugs with the new v0.4.0 format syntax


v0.4.0
------

Breaking changes: format() now uses a generic %L and %[]L where L is any letter, so %[func:%a%a] is now %[func:%a%a]F and %/F1/f is now %[f1]f


v0.3.14
-------

Breaking changes: format() now uses a generic %L and %[]L where L is any letter, so %[func:%a%a] is now %[func:%a%a]F and %/F1/f is now %[f1]f


v0.3.13
-------

format(): custom formatter gains more flexibility


v0.3.12
-------

Format cleanup


v0.3.11
-------

.inspect() now inspect Date instance


v0.3.10
-------

.inspect() now inspect ES6 Set & Map, and MongoDB ObjectID


v0.3.9
------

string.unicode.isFullWidth(): check if the given char is a full-width char or not


v0.3.8
------

string.unicode.surrogatePair(): it does not check input anymore, to gain perfs


v0.3.7
------

string.unicode.toFullWidth(): convert normal ASCII chars to their full-width counterpart


v0.3.6
------

Bugfix on the new .format()'s style markup feature


v0.3.5
------

Documentation.


v0.3.4
------

Documentation: precision on .format() and style markup.


v0.3.3
------

Documentation on the new caret ^ feature (style markup) for the .format() method.


v0.3.2
------

Expose the default formatter option.


v0.3.1
------

.format(): fixing a bug when no markup exists in the object.


v0.3.0
------

New [breaking compatibilities]: .format() now accepts style markup using the caret ^ sign.



v0.2.10
-------

New method: .camelCaseToDashed().


v0.2.3 - v0.2.9
---------------

.inspectError() improvement and bugfixes.
.inspectStack() that just inspect a stack string.


v0.2.0 - v0.2.2
---------------

format(): custom filters should use formatMethod() instead.


v0.1.21
-------

Option %E for format(): call inspectError() on the argument.


v0.1.20
-------

New method: inspectError().


v0.1.19
-------

Option %I for format(): call inspect() on the argument.


v0.1.18
-------

Dependencies.


v0.1.15 - v0.1.17
-----------------

Introducing the .toCamelCase() method.


v0.1.13 - v0.1.14
-----------------

Adding few MDN polyfill for the native String object.


v0.1.12
--------

Improvement on the unicode submodule.


v0.1.11
--------

New submodule: 'unicode'. Still a work in progress, so no doc and no API contract for instance.


v0.1.10
-------

.inspect() displays empty keys between quotes.


v0.1.9
------

New submodule: 'regexp'. Still a work in progress, so no doc and no API contract for instance.


v0.1.8
------

.inspect() with 'proto' option now reports correctly prototype of empty objects.


v0.1.7
------

Dependencies.


v0.1.6
------

* .ansi now contains code for dim and inverse.


v0.1.5
------

* Bugfix: .format.count() now works correctly when indexed formating are in use.


v0.1.4
------

* NEW! .ansi contains an object with ansi code, e.g. .ansi.red is the ansi code for red, etc.


v0.1.3
------

* .inspect(): fixed a bug displaying false circular references when dealing with arrays (because of .concat() unexpected behaviour)


v0.1.1 - v0.1.2
---------------

* .inspect() should handle exception when dealing with native object that raise exceptions when accessing properties.
e.g.: "Uncaught SecurityError: Failed to read the 'cookie' property from 'Document': Access is denied for this document."
raised by Chromium.

* Upgraded dependencies.


v0.1.0
------

Refactoring.




